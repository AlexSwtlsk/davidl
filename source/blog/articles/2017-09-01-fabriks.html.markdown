---
date: 2017-09-01
slug: fabriks
title: Plateforme e-commerce ultra rapide avec React.js et Next.js
description:
image:
page_title: La meilleure exp√©rience utilisateur possible‚Ä¶
page_emphasis: ‚Ä¶associ√© au plus grand nombre de produits disponibles
---

> C‚Äôest l‚Äôhistoire d‚Äôun grossite japonais üáØüáµ<br> qui ach√®te √† un fabricant danois üá©üá∞<br> sur un site fran√ßais üá´üá∑<br> √©cris en anglais üá¨üáß.
> <cite>Fabriks</cite>

__[Pain point](https://medium.com/sozial-monster/identifying-customer-pain-points-the-first-thing-you-want-to-do-when-determining-what-to-include-999fbfeb90df)__ : Il n‚Äôexiste pas de moyen simple de __contacter n‚Äôimporte quel fabricant__ pour lui acheter ses produits.

Les fabricants assistent √† des salons physiques, ou des foires commerciales et il n‚Äôy a pas d‚Äô√©quivalent en ligne.

Face √† ce constat, [Karl](https://www.linkedin.com/in/karl-leicht-208675104/) et [Alexis](https://www.linkedin.com/in/alexis-messier-89286127/) ont lanc√© [Fabriks.net](https://fabriks.net/) : une plateforme qui liste les produits des fabricants et qui permet de les contacter directement.

> La mani√®re la plus simple possible d‚Äô√™tre contact√© sans interm√©diaire

Dans cette √©tude de cas, je vais vous partager comment ils ont eu l‚Äôid√©e pour la __cr√©ation de cette plateforme__, o√π nous avons trouv√© l‚Äô__inspiration__, comment nous avons __tout d√©velopp√©__, comment est-ce __utilis√© chez leurs clients__ comme outil interne et comment seront __financ√©s les futures fonctionnalit√©s__.

Voici une pr√©sentation de l‚Äôarticle :

1. Structure de base et fonctionnalit√©s
1. Creation du design
1. Developp√© √† partir de projets open source
1. Lancement
1. Business model du produit
1. Backlog des developements futurs

Bien sur, ce ne sera plus un secret car je vais partager notre m√©thode avec vous. üôà

## Structure de base et fonctionnalit√©s

Si vous mettez de c√¥t√© les sites en flash ‚Äî dans 80% des cas ‚Äî les sites internets des fabricants ne sont pas trop √† la pointe en mati√®re de technologies web moderne.

Ce sont souvent des sites basiques Prestashop, Magento ou Wordpress sans aucune [strat√©die de contenu](/blog/fin-psd.html), ni hierachie dans le catalogue. √Ä cela, on a rajout√© tout les plugins de partage sur les r√©seaux sociaux et les 1001 fonctionnalit√©s inutiles pour avoir un site super lent.

L‚Äô√©quipe de Fabriks a d√©cid√© de r√©soudre ces probl√®mes. Voici nos contraintes :

- Hi√©rarchiser l‚Äôinformation
- Cr√©er le [meilleur design responsive](/design/webdesign.html) pour une interface de recherche
- Simplifier l‚Äôinterface au maximum malgr√© un grand nombre de datas
- Environnement `JavaScript` moderne, modulable et √©volutif

![Fabriks Find quality products from global manufacturers and suppliers](https://lh3.googleusercontent.com/e74V_XzyvXJOXZp_4vng6byVBSapf5GjJIaUtmJvwYPuj32Gr5O-jHDTO6aQNKqIP6V2J_EdGBnO4MeW2VvMnDbkbd9xOc3hkGTX4hca9r7fmb-C-eo1DG870FB0vw5Qh_tKAIbJE_hH2thfjrzzzInbUHQsgkuAyCN_Nw1jbuASX7Vlmw0spaBdseJiRnv78nJxsiRsEEdqDhoCETBsSXvdh9gLeCxHhSJJ80nFUpDiMWg1ZmaJvLYE3u5KSGGnisLEsqKcmC9TQZSCRdddzYGUfa_qkDHHUPAs69ENT9Bqhv2yBd59XZ_Nq9DeRX9qaW9VLcdaP4zEqAbX8Vy9SY64Nk90xdFSiTPSTQe-aoF2r2m17-H-GiZwa_quULeTJUk0OE-m1s2gLmI8ucD40nuOqVI5ml-2D--Duql1P4jyIx3WVqC1oCjfl1i8tW6tdgXKCCVPO6PE93C8u3QJ9vqAXig9-AMeQFgPRBVInVBHfK8tIslndJtdT_ENXNbP5LH-z4Fu0RFzL5CKwPvGRazSH0tf2cpE4A0q3jUn-RpHa6GW9jUV5BaTgGe8q2cZ9IxIG7RyjaZlCGlD_ciSidGzpIg-g60wVqrzk-A25IZHoM-JLEhZCA=w3344-h1906-no)

Apr√®s plusieures it√©rations sur diff√©rentes technologies [fabriks.net](https://fabriks.net/) est en ligne et nous sommes fier du r√©sultat.

- Une interface soign√©e
- Une plateforme rapide (Il ne faut pas oublier les fabricants du Nepal en 56k)
- Plus de 1000 produits index√©s chaque jour

Les fonctionnalit√©s sp√©cifiques sont :

- Notifications de nouveaux catalogue
- Newsletter pour les professionnels

Aujourd‚Äôhui le focus est mis sur l‚Äô__univers du meuble__ au sens large (Immobilier, d√©coration, outdoor, profesionnel, h√¥tels, restaurants, entreprises, h√¥pitaux). Il y d√©j√† beaucoup de travail √† faire l√†-dessus.

## Cr√©ation du design

Ne r√©inventez pas la roue, regardez autour des entreprises qui cr√©ent de bons produits pour obtenir de l‚Äôinspiration (comme Heroku, Slack, Mailchimp, Stripe). Regardez aussi vos concurents. Vous obtiendrez √©normement d‚Äôinformations.

> Si j‚Äôavais 6 heures pour couper un arbre,<br> je passerai les 4 premi√®res heures √† aiguiser ma hache.
> <cite>Abraham Lincoln</cite>

Quand vous commencerez l‚Äô√©tape du design, cela sera plus facile de developper votre produit car vous aurez fait vos devoirs. Vous devez __aiguiser votre hache__ avant de vous lancer.

![e-commerce Product page list](https://lh3.googleusercontent.com/OePfTZSmQviujjGW15jmbS4oXwmO43tXnLcdHT-HkKdmS6J4a-JT3lczEU2DGRJxDRnGB5XpGtAS12tzeyXSg_HTP21OW1lo19UT2NMUjpSzBoA2IQEM2fgpeT_Z3rXkf1KzxOy5xR4aLSFEDBZa3eU8LfFsJqau_SCF6ZV99sa0Em5UYu2B1-cyPf9W7gdl3owRESzGrecbd1j42Mt40kPrvreiH21jVmVF21Geh3hUNMdgcWnx5sQ6YZv1RyCAqoaMZGwdJwmwwhMx4Z53b1JbcImSJixn-mSr2NC6NPRtBfyTGT8c2kfnGCg4LveuKJEAhWriGiZFs1EZDVGczcHmzEScPYF05ESqekEXIsosBbT_9cLiXQHM_Arve3R7Nupf3quurgn1p3GYwtLUqUSiX8amDzGbc6QI4jE5lFdlUIvgMO0ewEOYoneAq_QyH9sd9vjktVSPDsnPrmZ6-L61mP7opPOceKNv1wk5jDEer6bGP1Ej2vQ-lT32v90lxiLBeKqZ0XLY4GV2quH1K4dAcPKbjwyHuvzZHPeD83uKGGaUmeyqdrzoAnaIlfrB-pS9KcuTHNrODiaStsBpdxhv3huP_4oMbW-yESwp_vDvjCwf6SgYLw=w2376-h1616-no)
_A list of [curated store pages](http://www.pages.xyz/type/store)_

Vous avez maintenant une bonne liste d‚Äôinspiration, avec beaucoups de couleurs, d‚Äôanimations, des icones magnifiques, une mise en page avec une sidebar fixe ou non et encore des centaines d‚Äôautres fonctionnalit√©s.

_Comment savoir quelles sont les meilleures pour votre audience ?_

Comme nous ne savions pas ce que les gens voulaient, nous avons d√©cid√© d‚Äô√©crire toutes les fonctionnalit√©s contenues dans ces sites et d‚Äô__utiliser uniquement les plus r√©pandues__.

Nous avons r√©alis√© que les fonctionnalit√©s principales r√©solvent environ 95% des cas. Les 5% restants r√©solvent des probl√®mes tr√®s sp√©cifiques.

Les √©l√©ments de bases sont : 

- `colors`
- `buttons`
- `icons`
- `typography`
- `sidebar`
- `callout`
- `navbars`
- `dropdowns`

√Ä partir de ces √©l√©ments, j‚Äôai cr√©√© un styleguide ‚Äî gr√¢ce √† mon template middleman ‚Äî qui permet de g√©n√©rer des sites statiques vitesse lumi√®re.

![Styleguide gif previw](https://lh3.googleusercontent.com/n9BujcEkqK6LDAPGnuGbnBE2DTKxwaMxGxZp7oKriUdNn1Nzt7V-0iehLfNov8oFZW_he-K2mJnQ-P97Z-zUv7L4jJ1D_fpuAcp8Vv5iitSHnYqedYGZLcIONrqRwYWK4tZIS7pDA1FUnStLeenkCR3DAiTBJaibotDXBxitZwHx8H8B7qJDEXHOR3lDOAFrJrDQqE7PMl7NC02O4-Ds2QvLyrfS61g59k46wtTWFlzyVBPAIog5PmOLnkMcYcCkdn5NSHk0hshSWWX9GV7unOyRmqDZ4Od_vX1gCT4YlaX6abwBhP0RqHviC17Tfj48E_DtYWBcDEEVCHVQxAyQOQFvJ7Wl3740DogTeL9mmYa-2wryaRg1KlQCc-3AKFQOuXjEyC5JyXvpSNtPMoTuPsDeSINdR4G2icOgZyl2CrNOlt7AWOhxmMpx_SnBO7hqzOly7h-g168Ys403tmkJv27EIVrSuNekd7cO0Mcf12J1SigHU_Dl3o5QR8BJ4Vps3cVnlPc-O6R33Hqu7Q11mPHfmCkcml1VsMN0EwhRzGfyl3BBhmcfTc8wb9cppW3oM0pClg3zzUEzIARIPTTV5vDpyuG0ESwOqoxhAp80YpxyQay6rENebQ=w662-h264-no)

[https://fabriks.github.io/styleguide/](https://fabriks.github.io/styleguide/)

## D√©velopp√© √† partir de projets open source

### Middleman pour le design

Je suis __d√©veloppeur front-end__. Ce qui signifie que mon monde se limite √† `HTML`, `CSS` et `JavaScript`. Dans la vraie vie c'est plus compliqu√© que cela mais je met quiconque au d√©fi de coder 80% d'une interface de site web en 2 jours.

En utilisant le g√©n√©rateur de site statique middleman cela devient beaucoup plus facile et rapide. Vous trouverez ici [la source des feuilles de style](https://github.com/Fabriks/styleguide/tree/master/source/assets/stylesheets).

### D√©couverte de Next.js ‚Äî la combinaison r√©ussie entre SSR et SPA

Sur un projet tel que [fabriks.net](https://fabriks.net/), le server-side-rendering (SSR) n‚Äôest pas une option √† cause du r√©f√©rencement sur Google.
Les pages qui sont traditionnellement g√©n√©r√©es par le navigateur de l‚Äôutilisateur le sont compil√©es par le serveur et envoy√©s par la suite au client.

Next.js est un framework bas√© sur React.js et qui permet de faire __simplement du server-side-rendering__.
Contrairement √† React.js ‚Äî qui est une librairie ‚Äî Next.js est un framework complet. De base, il y a des r√®gles, il faut les suivres car il est difficile de changer ensuite.

Par exemple, les pages sont dans un dossier `/pages`, les styles dans `/styles`, etc‚Ä¶ Le gain est la simplicit√© du `build` et de la `config`. Fini les prises de t√™te pour configurer Webpack version X avec Babel version Y, la compilation des assets, et la plomberie en g√©n√©ral.

La principale complexit√© vient de la __gestion du routeur__, ou devrais-je dire, des routeurs.

Il y a un routeur c√¥t√© serveur qui route `/` vers la page `index.js`, `/products` vers la page `products.js` etc‚Ä¶

On a aussi un routeur c√¥t√© client qui charge les composants de la page suivante. C‚Äôest dans le lien entre ces deux routeurs que r√©side le __b√©n√©fice de Next.js__ :

1. B√©n√©fice du __server-side-rendering__ : Premi√®re page charg√©e rapidement, crawlabilit√© par Google
1. B√©n√©fice de la __Single Page Application__ : transition fluide car on ne charge que des morceaux d‚Äôinterface (absence de blink √† la PHP)

Ce lien se manifeste au travers de la m√©thode `getInitialProps()` qui s‚Äô√©x√©cute au moment du routage.

Pour en savoir plus je vous conseille le site [learnnextjs.com](https://learnnextjs.com)

### Les feuilles de style

Le choix de [Foundation](http://foundation.zurb.com/) s‚Äôest impos√© car ce framework poss√®de une meilleure s√©mantique et √©volutivit√© que Bootstrap. Le build bas√© sur `Sass` avec des variables globales pour les __couleurs__, la __typographie__ et le __look‚Äôn‚Äôfell__ g√©n√©ral.

Un probl√®me rencontr√© : les styles globaux ne s‚Äôaccordent pas bien avec la philosophie ‚Äúcomponent‚Äù de React.js. [Karl](https://github.com/kleicht) a donc pass√© une demi-journ√©e pour faire un peu de plomberie pour que le `build` fonctionne. Lors de cette √©tape nous avons abandonn√© notre styleguide construit en `ruby` pour passer avec du 100% JavaScript en `JSX` pour les vues.

Foundation est toujours utile pour construire l‚Äô[application shell](https://developers.google.com/web/fundamentals/architecture/app-shell). Je n'ai inclus que 30% du framework avec des composants comme la grille, la typographie, et les diff√©rents call to action.

Nous utilisons aussi des `styled-components` qui permettent d‚Äô__inclure facilement du style__ dans chaque composant.

## Lancement

> Les publicit√©s ne fonctionnent plus. Aujourd‚Äôhui le vrai marketing, c‚Äôest le produit en lui-m√™me, capable de d√©livrer la proposition de valeur tout de suite.
> <cite>Karl Leicht</cite>

__Scoop__ : Il n'y aura pas de lancement. La plateforme est en ligne depuis plusieurs mois.

Nous it√©rons sur le produit depuis le d√©but d‚Äôann√©e. Gr√¢ce √† une excelente strat√©gie de deployement continu nous pouvons mettre en production le site plusieurs fois par jour.

@karl blablabalbalb scalingo ou aws ou heroku

Ajourd'hui l'accent est mis pour faire conna√Ætre ce site e-commerce de [mise en relation de fabricants](https://fabriks.net/)

## Le business model du produit

@karl 
@alex

NEED HELP HERE


## Backlog des developements futurs

@karl 
@alex

NEED HELP HERE

# A caser

- Global donc rapide
